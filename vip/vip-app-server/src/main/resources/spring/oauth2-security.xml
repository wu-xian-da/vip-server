<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns:oauth2="http://www.springframework.org/schema/security/oauth2"
       xmlns:p="http://www.springframework.org/schema/p" xmlns:security="http://www.springframework.org/schema/security"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd
		http://www.springframework.org/schema/security/oauth2 http://www.springframework.org/schema/security/spring-security-oauth2.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

   <!-- <beans profile="oauth">
        <security:http pattern="/api" create-session="never"
                       entry-point-ref="oauth2AuthenticationEntryPoint"
                       access-decision-manager-ref="accessDecisionManager"
                       authentication-manager-ref="authenticationManager">
            <security:anonymous enabled="false"/>
            <security:intercept-url pattern="/api" access="SCOPE_READ"/>
            <security:custom-filter ref="resourceServerFilter" before="PRE_AUTH_FILTER"/>
            <security:access-denied-handler ref="oauthAccessDeniedHandler"/>
        </security:http>

        <security:authentication-manager>
            <security:authentication-provider>
                <security:jdbc-user-service
                        data-source-ref="dataSource"
                        users-by-username-query="select username, password, enabled from t_user where username = ?" />
                <security:password-encoder hash="md5"/>
            </security:authentication-provider>
            <security:authentication-provider user-service-ref="userDetailsService"/>
        </security:authentication-manager>

        &lt;!&ndash;自定义实现认证 手机验证码认证&ndash;&gt;
        <bean id="userDetailsService" class="org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl">
            <property name="dataSource" ref="dataSource"/>
        </bean>

        <bean id="oauthAccessDeniedHandler"
              class="org.springframework.security.oauth2.provider.error.OAuth2AccessDeniedHandler"/>

        &lt;!&ndash;默认使用OAuth2AuthenticationEntryPoint处理认证结果&ndash;&gt;
        <bean id="oauth2AuthenticationEntryPoint"
                    class="org.springframework.security.oauth2.provider.error.OAuth2AuthenticationEntryPoint"/>

        <bean id="accessDecisionManager" class="org.springframework.security.access.vote.UnanimousBased"
              xmlns="http://www.springframework.org/schema/beans">
            <constructor-arg>
                <list>
                    <bean class="org.springframework.security.oauth2.provider.vote.ScopeVoter"/>
                </list>
            </constructor-arg>
        </bean>

        &lt;!&ndash;使用redis存储Token&ndash;&gt;
      &lt;!&ndash;  <bean id="tokenStore" class="com.jianfei.frame.spring.TokenStoreFactoryBean"/>&ndash;&gt;
        &lt;!&ndash;使用内存存储Token&ndash;&gt;
        <bean id="tokenStore" class="org.springframework.security.oauth2.provider.token.store.InMemoryTokenStore"/>
        &lt;!&ndash;如果允许刷新token 请将supportRefreshToken 的值设置为true, 默认为不允许&ndash;&gt;
        <bean id="tokenServices" class="org.springframework.security.oauth2.provider.token.DefaultTokenServices">
            <property name="tokenStore" ref="tokenStore"/>
            <property name="supportRefreshToken" value="true"/>
        </bean>

        <bean id="authenticationManager"
              class="org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationManager">
            <property name="tokenServices" ref="tokenServices"/>
        </bean>

        <bean id="resourceServerFilter"
              class="org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter">
            <property name="authenticationManager" ref="authenticationManager"/>
            <property name="authenticationEntryPoint" ref="oauthAuthenticationEntryPoint"/>
        </bean>
    </beans>-->

</beans>
